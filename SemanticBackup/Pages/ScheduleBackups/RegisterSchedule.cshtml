@page "/resource-groups/{resourceGroupId}/schedule-backups/new-schedule"
@model SemanticBackup.Pages.DatabaseBackupSchedules.RegisterScheduleModel
@{
    ViewData["Title"] = "Register Database Schedule";
}
<div class="content">
    <div class="text container">
        <h2>Setup Backup Schedule</h2>
        <div class="ui divider"></div>
        <form asp-page="RegisterDatabase" method="post">
            <div class="ui segment attached">
                @{
                    if (!string.IsNullOrWhiteSpace(Model.ErrorResponse))
                    {
                        <div class="ui icon small negative message">
                            <i class="exclamation icon"></i>
                            <div class="content">
                                <div class="header">
                                    Oops! Request Failed
                                </div>
                                <p>@(Model.ErrorResponse)</p>
                            </div>
                        </div>
                    }
                }

                <div class="form-row">
                    <div class="form-group col-md-6">
                        <label for="DatabaseName">Select Database</label>
                        <select class="selectpicker form-control" asp-for="backupScheduleRequest.BackupDatabaseInfoId" required>
                            @{
                                if (Model.databaseInfoSelectList != null)
                                {
                                    foreach (var dbrecord in Model.databaseInfoSelectList.OrderBy(x => x.DatabaseName))
                                    {
                                        <option value="@(dbrecord.Id)">@(string.Format("Database: {0}, Server: {1}", dbrecord.DatabaseName, dbrecord.Server))</option>
                                    }
                                }
                                <option selected disabled>---SELECT DATABASE---</option>
                            }
                        </select>
                    </div>

                    <div class="form-group col-md-6">
                        <label for="DatabaseType">Backup Backup Type</label>
                        <select class="selectpicker form-control" asp-for="backupScheduleRequest.ScheduleType" required>
                            @{
                                foreach (var scheduleType in Enum.GetValues(typeof(BackupScheduleType)).Cast<BackupScheduleType>())
                                {
                                    <option>@(scheduleType)</option>
                                }
                            }
                        </select>
                    </div>

                </div>
                <div class="form-row">
                    <div class="form-group col-md-6">
                        <label for="EveryHours">Runs Every (Hours)</label>
                        <input asp-for="backupScheduleRequest.EveryHours" value="24" type="number" min="1" autocomplete="off" class="form-control" required>
                    </div>
                    <div class="form-group col-md-6">
                        <label for="StartDate">Schedule Start</label>
                        <input asp-for="backupScheduleRequest.StartDate" type="datetime" autocomplete="off" class="form-control current-date-now" required>
                    </div>
                </div>

                <button type="submit" class="btn btn-primary">Register Backup Schedule</button>

            </div>
        </form>
    </div><!-- container -->
</div><!-- content -->
@section Scripts{
<script type="text/javascript">
    var now = new Date();
    var day = ("0" + now.getDate()).slice(-2);
    var month = ("0" + (now.getMonth() + 1)).slice(-2);
    var today = now.getFullYear()+"-"+(month)+"-"+(day) + " 00:00:00";
    $('.current-date-now').val(today);
</script>
}