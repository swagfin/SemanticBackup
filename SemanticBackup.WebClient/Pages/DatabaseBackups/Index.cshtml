@page
@model SemanticBackup.WebClient.Pages.DatabaseBackups.IndexModel
@{
    ViewData["Title"] = "Database Backups | All";
}
@{
    <script type="text/javascript">
        var baseUrl = @Html.Raw(Json.Serialize(Model.ApiEndPoint));
    </script>
}
<div class="container pd-x-0">
    <div class="ui container">

        <div class="ui header large">Database Backups</div>
        <div class="ui divider"></div>

        <table class="ui selectable table">
            <thead>
                <tr>
                    <th>#</th>
                    <th>Name</th>
                    <th>Last Updated</th>
                    <th>Execution Speed</th>
                    <th>Backup Status</th>
                </tr>
            </thead>
            <tbody>
                @{
                    int count = 0;
                    if (Model.BackupRecordsResponse != null && Model.BackupRecordsResponse.Count > 0)
                        foreach (var record in Model.BackupRecordsResponse)
                        {
                            count++;
                            <tr onclick="location.href='/databasebackupschedules/@(record.Id)'">
                                <td>@string.Format("{0:N0}", count)</td>
                                <td class="positive" style="font-weight:bold;font-size:14px"> <i class="clock icon"></i> @record.Name</td>
                                <td class="warning last-status-update-for-@(record.Id)" style="font-weight:bold">@string.Format("{0:yyyy-MM-dd hh:mm tt}", record.StatusUpdateDate)</td>
                                <td class="execution-milliseconds-for-@(record.Id)">@record.ExecutionMilliseconds</td>

                                @{
                                    if (record.BackupStatus == "EXECUTING")
                                    {
                                        <td subscribe-status-event-id="@(record.Id)" class="subscribe-status-event status-for-@(record.Id)"> <span class="ui label small basic blue"><i class="notched circle loading icon"></i>@record.BackupStatus</span>  </td>
                                    }
                                    if (record.BackupStatus == "COMPLETED")
                                    {
                                        <td subscribe-status-event-id="@(record.Id)" class="subscribe-status-event status-for-@(record.Id)"> <span class="ui label small basic green"><i class="notched circle loading icon"></i>VALIDATING</span>  </td>
                                    }
                                    else if (record.BackupStatus == "COMPRESSING")
                                    {
                                        <td subscribe-status-event-id="@(record.Id)" class="subscribe-status-event status-for-@(record.Id)"> <span class="ui label small basic olive"><i class="notched circle loading icon"></i>@record.BackupStatus</span>  </td>
                                    }
                                    else if (record.BackupStatus == "READY")
                                    {
                                        <td subscribe-status-event-id="@(record.Id)" class="status-for-@(record.Id)"><span class="ui label small basic green"><i class="file archive icon"></i>BACKUP COMPLETED</span>  </td>
                                    }
                                    else if (record.BackupStatus == "ERROR")
                                    {
                                        <td subscribe-status-event-id="@(record.Id)" class="status-for-@(record.Id)"><span class="ui label small basic red"><i class="exclamation circle icon"></i>@record.BackupStatus</span>  </td>
                                    }
                                    else
                                    {
                                        <td subscribe-status-event-id="@(record.Id)" class="subscribe-status-event status-for-@(record.Id)">  <span class="ui label small basic"><i class="info icon"></i>@record.BackupStatus</span>  </td>
                                    }
                                }

                            </tr>
                        }
                    else
                    {
                        <tr>
                            <td colspan="5" style="text-align:center">
                                <div class="ui message small warning"><div>To Data Available</div></div>
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
</div>

@section Scripts{
<script src="~/lib/signalr/dist/browser/signalr.js"></script>
<script type="text/javascript" src="~/assets/js/signalr-subscriber.js"></script>
<script type="text/javascript" src="~/assets/js/time-ago.js"></script>
<script type="text/javascript">
       //Try To Create Function
    $('.subscribe-status-event').each(function (i, obj){
      var recordId = $(this).attr('subscribe-status-event-id');
      console.log("Creating Observer for Record #" + recordId);
      //Signal R Observer
      _= getListenerAsync(baseUrl + "BackupRecordsNotify", recordId, "ReceiveNotification",function (metric)
       {
          console.log("Received Database Backup Status Update");
          //console.log(metric);
          var key = metric.id;
          var status = metric.backupStatus;
          //Update Status
          console.log("Updating UI Key: " + key+ ", Status: "+ status);
          if(status=="EXECUTING"){ $(".status-for-" + key).html('<span class="ui label small basic blue"><i class="notched circle loading icon"></i>' + status + '</span>'); }
          else if(status=="COMPLETED"){ $(".status-for-" + key).html('<span class="ui label small basic green"><i class="notched circle loading icon"></i>VALIDATING</span>'); }
          else if(status=="COMPRESSING"){ $(".status-for-" + key).html('<span class="ui label small basic olive"><i class="notched circle loading icon"></i>' + status + '</span>'); }
          else if(status=="READY"){ $(".status-for-" + key).html('<span class="ui label small basic green"><i class="file archive icon"></i>BACKUP COMPLETED</span>'); }
          else if(status=="ERROR"){ $(".status-for-" + key).html('<span class="ui label small basic red"><i class="exclamation circle icon"></i>' + status + '</span>'); }
          else {  $(".status-for-" + key).html('<span class="ui label small basic"><i class="info icon"></i>' + status + '</span>'); }
          //Update Others
          $(".execution-milliseconds-for-" + key).html(metric.executionMilliseconds);
          $(".last-status-update-for-" + key).html(time_ago(new Date(metric.statusUpdateDate)));
          //console.log("Updated UI Success");
       });
     });
</script>
}